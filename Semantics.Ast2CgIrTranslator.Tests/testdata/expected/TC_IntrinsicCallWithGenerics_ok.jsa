var OClassDescription = SemanticsApi.CreateClassObjectDescriptor("O");
CallHandlerResult O_f_Handler(Location location, FunctionCall functionCall)
{
    var handledArguments = ProcessorApi.ProcessKeywordArguments(functionCall);
    handledArguments.TryGetValue("self", out var self);
    var t = callee1(location, 1);
    t = callee1(location, 1);
    var s = callee2(location, 1, "test");
    s = callee2(location, 1, "test");
    return CallHandlerResult.Processed(SemanticsApi.None);
}
var O_f_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("f").AssignTo(OClassDescription).WithHandler(O_f_Handler).WithArgumentsInfo(new ArgumentsInfo(["self", ], 1, false, false, 0, 0)).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "O", OClassDescription);
PythonTypes.BuildClass(OClassDescription);
