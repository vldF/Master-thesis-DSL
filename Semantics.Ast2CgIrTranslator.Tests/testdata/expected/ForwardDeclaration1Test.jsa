var MyObjectClassDescription = SemanticsApi.CreateClassObjectDescriptor("MyObject");
CallHandlerResult MyObject_InnerFunc_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    return CallHandlerResult.Processed(SemanticsApi.CreateObjectDescriptor("<Type1>", arg1));
}
var MyObject_InnerFunc_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("InnerFunc").AssignTo(MyObjectClassDescription).WithHandler(MyObject_InnerFunc_Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "MyObject", MyObjectClassDescription);
PythonTypes.BuildClass(MyObjectClassDescription);
var Type1ClassDescription = SemanticsApi.CreateClassObjectDescriptor("Type1");
Interpreter.Assign(ModuleDescriptor, "Type1", Type1ClassDescription);
PythonTypes.BuildClass(Type1ClassDescription);
