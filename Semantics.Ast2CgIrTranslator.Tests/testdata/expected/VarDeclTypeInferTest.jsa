var OClassDescription = SemanticsApi.CreateClassObjectDescriptor("O");
CallHandlerResult O_foo_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg = functionCall.Arguments[1];
    var v1 = arg;
    var v2 = arg;
    var v3 = SemanticsApi.CreateLiteral("str");
    var intVar1 = SemanticsApi.CreateLiteral(1);
    var intVar2 = SemanticsApi.CreateLiteral(2);
    var intVar3 = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, intVar1, intVar2);
    return CallHandlerResult.Processed(SemanticsApi.None);
}
var O_foo_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("foo").AssignTo(OClassDescription).WithHandler(O_foo_Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "O", OClassDescription);
PythonTypes.BuildClass(OClassDescription);
