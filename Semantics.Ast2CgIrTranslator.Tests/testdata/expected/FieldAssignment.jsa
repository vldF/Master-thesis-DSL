var InnerObjectClassDescription = SemanticsApi.CreateClassObjectDescriptor("InnerObject");
CallHandlerResult InnerObject___init___Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    return CallHandlerResult.Processed(self);
}
var InnerObject___init___MethodDescriptor = ProcessorApi.CreateFunctionBuilder("__init__").AssignTo(InnerObjectClassDescription).WithHandler(InnerObject___init___Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "InnerObject", InnerObjectClassDescription);
PythonTypes.BuildClass(InnerObjectClassDescription);
var MyObjectClassDescription = SemanticsApi.CreateClassObjectDescriptor("MyObject");
CallHandlerResult MyObject___init___Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    return CallHandlerResult.Processed(self);
}
var MyObject___init___MethodDescriptor = ProcessorApi.CreateFunctionBuilder("__init__").AssignTo(MyObjectClassDescription).WithHandler(MyObject___init___Handler).BuildAndRegister();
CallHandlerResult MyObject_simpleFieldAssignment_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    Interpreter.Assign(self, "field", arg1);
    return CallHandlerResult.Processed(SemanticsApi.None);
}
var MyObject_simpleFieldAssignment_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("simpleFieldAssignment").AssignTo(MyObjectClassDescription).WithHandler(MyObject_simpleFieldAssignment_Handler).BuildAndRegister();
CallHandlerResult MyObject_innerFieldAssignment_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    Interpreter.TryGetValue(self, "innerObj", out var tryGetValueResult1);
    Interpreter.Assign(tryGetValueResult1, "innerField", arg1);
    Interpreter.TryGetValue(self, "innerObj", out var tryGetValueResult2);
    Interpreter.TryGetValue(tryGetValueResult2, "innerField", out var tryGetResult1);
    return CallHandlerResult.Processed(tryGetResult1);
}
var MyObject_innerFieldAssignment_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("innerFieldAssignment").AssignTo(MyObjectClassDescription).WithHandler(MyObject_innerFieldAssignment_Handler).BuildAndRegister();
CallHandlerResult MyObject_localObjectFieldAssignment_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    SymbolicExpression local;
    Interpreter.Assign(local, "innerField", arg1);
    return CallHandlerResult.Processed(SemanticsApi.None);
}
var MyObject_localObjectFieldAssignment_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("localObjectFieldAssignment").AssignTo(MyObjectClassDescription).WithHandler(MyObject_localObjectFieldAssignment_Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "MyObject", MyObjectClassDescription);
PythonTypes.BuildClass(MyObjectClassDescription);
