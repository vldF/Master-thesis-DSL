var TypeClassDescription = PythonTypes.CreateClass("Type");
CallHandlerResult InnerFuncHandler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    MyIntrinsicFunction(location, arg1);
    return CallHandlerResult.Processed(MyIntrinsicFunction(location, arg1));
}
var MyObjectClassDescription = PythonTypes.CreateClass("MyObject").WithMethod("InnerFunc", InnerFuncHandler);
Interpreter.Assign(ModuleDescriptor, "Type", TypeClassDescription.ClassDescriptor);
Interpreter.Assign(ModuleDescriptor, "MyObject", MyObjectClassDescription.ClassDescriptor);
