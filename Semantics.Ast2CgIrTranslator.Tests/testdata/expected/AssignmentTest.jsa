var TypeClassDescription = SemanticsApi.CreateClassObjectDescriptor("Type");
Interpreter.Assign(ModuleDescriptor, "Type", TypeClassDescription);
PythonTypes.BuildClass(TypeClassDescription);
var MyObjectClassDescription = SemanticsApi.CreateClassObjectDescriptor("MyObject");
CallHandlerResult MyObject_InnerFunc_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    var test1 = arg1;
    var test2 = test1;
    test1 = test2;
    return CallHandlerResult.Processed(test1);
}
var MyObject_InnerFunc_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("InnerFunc").AssignTo(MyObjectClassDescription).WithHandler(MyObject_InnerFunc_Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "MyObject", MyObjectClassDescription);
PythonTypes.BuildClass(MyObjectClassDescription);
