#load "Standard.jsa"
CallHandlerResult InnerFuncHandler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var arg1 = functionCall.Arguments[1];
    var returnValueBuilder1 = Interpreter.CreateReturnedValuesBuilder();
    SymbolicExpression result;
    var condition2 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(1)));
    Engine.TryEnterBranch(condition2, out var branchId3);
    var temp = SemanticsApi.CreateLiteral(2);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(2), temp);
    Engine.LeaveBranch(out var branchId3);
    var condition3 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2)));
    Engine.TryEnterBranch(condition3, out var branchId4);
    var temp = SemanticsApi.CreateLiteral(2);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(2), temp);
    Engine.LeaveBranch(out var branchId4);
    var notCondition1 = Interpreter.InvokeFunction(location, SemanticsApi.NotDescriptor, SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2))));
    Engine.TryEnterBranch(notCondition1, out var branchId5);
    var temp2 = SemanticsApi.CreateLiteral(3);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(3), temp2);
    var currentCond3 = Interpreter.CurrentContext.CurrentCondition;
    returnValueBuilder1.AddOption(currentCond3, result);
    Engine.LeaveBranch(out var branchId5);
    var condition5 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2)));
    Engine.TryEnterBranch(condition5, out var branchId7);
    var temp = SemanticsApi.CreateLiteral(2);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(2), temp);
    Engine.LeaveBranch(out var branchId7);
    var notCondition2 = Interpreter.InvokeFunction(location, SemanticsApi.NotDescriptor, SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2))));
    Engine.TryEnterBranch(notCondition2, out var branchId8);
    var condition4 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(3)));
    Engine.TryEnterBranch(condition4, out var branchId6);
    var temp3 = SemanticsApi.CreateLiteral(3);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(3), temp3);
    Engine.LeaveBranch(out var branchId6);
    Engine.LeaveBranch(out var branchId8);
    var condition7 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2)));
    Engine.TryEnterBranch(condition7, out var branchId11);
    var temp = SemanticsApi.CreateLiteral(2);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(2), temp);
    Engine.LeaveBranch(out var branchId11);
    var notCondition4 = Interpreter.InvokeFunction(location, SemanticsApi.NotDescriptor, SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(2))));
    Engine.TryEnterBranch(notCondition4, out var branchId12);
    var condition6 = SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(3)));
    Engine.TryEnterBranch(condition6, out var branchId9);
    var temp3 = SemanticsApi.CreateLiteral(3);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(3), temp3);
    Engine.LeaveBranch(out var branchId9);
    var notCondition3 = Interpreter.InvokeFunction(location, SemanticsApi.NotDescriptor, SemanticsApi.CreateCastToBoolOperator(Interpreter.InvokeFunction(location, SemanticsApi.EqDescriptor, arg1, SemanticsApi.CreateLiteral(3))));
    Engine.TryEnterBranch(notCondition3, out var branchId10);
    var temp4 = SemanticsApi.CreateLiteral(3);
    result = Interpreter.InvokeFunction(location, SemanticsApi.AddDescriptor, SemanticsApi.CreateLiteral(3), temp4);
    Engine.LeaveBranch(out var branchId10);
    Engine.LeaveBranch(out var branchId12);
    var currentCond4 = Interpreter.CurrentContext.CurrentCondition;
    returnValueBuilder1.AddOption(currentCond4, result);
    return CallHandlerResult.Processed(returnValueBuilder1);
}
var MyObjectClassDescription = PythonTypes.CreateClass("MyObject").WithMethod("InnerFunc", InnerFuncHandler);
Interpreter.Assign(ModuleDescriptor, "MyObject", MyObjectClassDescription.ClassDescriptor);
