var TypeClassDescription = PythonTypes.CreateClass("Type");
CallHandlerResult InnerFuncHandler(Location location, FunctionCall functionCall)
{
    var arg1 = FunctionCall.Arguments[0];
    Type result;
    var condition0 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 1));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 1)), out var branchId0);
    var temp = 2;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 2, temp);
    Engine.LeaveBranch(out var branchId0);
    var condition1 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)), out var branchId1);
    var temp = 2;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 2, temp);
    Engine.LeaveBranch(out var branchId1);
    var notCondition0 = Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)));
    Engine.TryEnterBranch(Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2))), out var branchId2);
    var temp2 = 3;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 3, temp2);
    Engine.LeaveBranch(out var branchId2);
    var condition3 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)), out var branchId4);
    var temp = 2;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 2, temp);
    Engine.LeaveBranch(out var branchId4);
    var notCondition1 = Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)));
    Engine.TryEnterBranch(Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2))), out var branchId5);
    var condition2 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3)), out var branchId3);
    var temp3 = 3;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 3, temp3);
    Engine.LeaveBranch(out var branchId3);
    Engine.LeaveBranch(out var branchId5);
    var condition5 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)), out var branchId8);
    var temp = 2;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 2, temp);
    Engine.LeaveBranch(out var branchId8);
    var notCondition3 = Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2)));
    Engine.TryEnterBranch(Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 2))), out var branchId9);
    var condition4 = PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3));
    Engine.TryEnterBranch(PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3)), out var branchId6);
    var temp3 = 3;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 3, temp3);
    Engine.LeaveBranch(out var branchId6);
    var notCondition2 = Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3)));
    Engine.TryEnterBranch(Interpreter.InvokeFunction(Location, PythonSemantics.NotDescriptor, PythonSemantics.CreateCastToBoolOperator(Interpreter.InvokeFunction(Location, PythonSemantics.EqDescriptor, arg1, 3))), out var branchId7);
    var temp4 = 3;
    result = Interpreter.InvokeFunction(Location, PythonSemantics.AddDescriptor, 3, temp4);
    Engine.LeaveBranch(out var branchId7);
    Engine.LeaveBranch(out var branchId9);
    return CallHandlerResult.Processed(result);
}
var MyObjectClassDescription = PythonTypes.CreateClass("MyObject").WithMethod("InnerFunc", InnerFuncHandler);
