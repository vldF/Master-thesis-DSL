#load "Standard.jsa"
var ObjClassDescription = SemanticsApi.CreateClassObjectDescriptor("Obj");
CallHandlerResult Obj_Primitive_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var teintData1 = SemanticsApi.CreateObjectDescriptor("<<dsl_teinted_data_0>>").WithType(SemanticsApi.LongType).With(new TaintOrigin("Header"));
    return CallHandlerResult.Processed(teintData1);
}
var Obj_Primitive_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("Primitive").AssignTo(ObjClassDescription).WithHandler(Obj_Primitive_Handler).BuildAndRegister();
CallHandlerResult Obj_Object_Handler(Location location, FunctionCall functionCall)
{
    var self = functionCall.Arguments[0];
    var teintData2 = SemanticsApi.CreateObjectDescriptor("<<dsl_teinted_data_1>>").With(new TaintOrigin("Cookie"));
    return CallHandlerResult.Processed(teintData2);
}
var Obj_Object_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("Object").AssignTo(ObjClassDescription).WithHandler(Obj_Object_Handler).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "Obj", ObjClassDescription);
PythonTypes.BuildClass(ObjClassDescription);
