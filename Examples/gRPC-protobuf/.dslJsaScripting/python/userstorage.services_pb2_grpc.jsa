#load "Standard.jsa"
#load "userstorage.services_pb2.jsa"

using JSA.Utils.Logging;

var UserStoreStubClassDescription = SemanticsApi.CreateClassObjectDescriptor("UserStoreStub");
CallHandlerResult UserStoreStub___init___Handler(Location location, FunctionCall functionCall)
{
    var handledArguments = ProcessorApi.ProcessKeywordArguments(functionCall);
    handledArguments.TryGetValue("self", out var self);
    handledArguments.TryGetValue("channel", out var channel);
    return CallHandlerResult.Processed(SemanticsApi.None);
}
var UserStoreStub___init___MethodDescriptor = ProcessorApi.CreateFunctionBuilder("__init__").WithHandler(UserStoreStub___init___Handler).WithArgumentsInfo(new ArgumentsInfo(["self", "channel", ], 2, false, false, 0, 0)).AssignTo(UserStoreStubClassDescription).BuildAndRegister();
CallHandlerResult UserStoreStub_GetUser_Handler(Location location, FunctionCall functionCall)
{
    var handledArguments = ProcessorApi.ProcessKeywordArguments(functionCall);
    handledArguments.TryGetValue("self", out var self);
    handledArguments.TryGetValue("request", out var request);
    Interpreter.TryGetValue(request, "id", out var tryGetResult1);
    Detect(location, tryGetResult1, "Insecure Direct Object References", "Arbitrary string data");
    var teintData1 = SemanticsApi.CreateObjectDescriptor("<<dsl__data_0>>");
    return CallHandlerResult.Processed(teintData1);
}
var UserStoreStub_GetUser_MethodDescriptor = ProcessorApi.CreateFunctionBuilder("GetUser").WithHandler(UserStoreStub_GetUser_Handler).WithArgumentsInfo(new ArgumentsInfo(["self", "request", ], 2, false, false, 0, 0)).AssignTo(UserStoreStubClassDescription).BuildAndRegister();
Interpreter.Assign(ModuleDescriptor, "UserStoreStub", UserStoreStubClassDescription);
PythonTypes.BuildClass(UserStoreStubClassDescription);
